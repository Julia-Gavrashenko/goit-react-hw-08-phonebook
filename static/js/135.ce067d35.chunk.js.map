{"version":3,"file":"static/js/135.ce067d35.chunk.js","mappings":"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","sources":["components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","components/ContactsPage/ContactsPage.styled.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/UpdateModal/styles.js","components/UpdateForm/UpdateForm.styled.jsx","components/UpdateForm/UpdateForm.jsx","components/UpdateModal/UpdateModal.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactsPage/ContactsPage.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  color: #7b7979;\n  font-weight: 700;\n  font-family: 'Poppins', sans-serif;\n  font-size: 20px;\n  text-shadow: 8px 8px 12px rgba(174, 172, 172, 0.3),\n    -8px -8px 12px rgba(164, 162, 162, 0.06);\n`;\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  margin-top: 15px;\n  padding-left: 30px;\n`;\n\nexport const FilterField = styled.input`\n  height: 30px;\n  padding: 3px;\n  margin-bottom: 15px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 8px 8px 12px rgba(143, 142, 142, 0.2),\n    -8px -8px 12px rgba(27, 26, 26, 0.04);\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/contactsFilterSlice';\nimport { FilterLabel,  FilterContainer, FilterField, } from './ContactFilter.styled';\n\n\n// import {\n//   FilterLabel,\n//   FilterContainer,\n//   FilterField,\n// } from './ContactFilter.styled';\n\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.value);\n\n  const changeFilter = event => {\n    dispatch(getFilteredContacts(event.currentTarget.value));\n  };\n\n  return (\n    <FilterContainer>\n      <FilterLabel>\n        Find Contacts by name\n        <FilterField type=\"text\" value={filter} onChange={changeFilter} />\n      </FilterLabel>\n    </FilterContainer>\n  );\n};","import styled from 'styled-components';\n\nexport const ContactsLayout = styled.div`   \n  width: 900px;\n  padding: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n  background: #c1d3e0;\n  border-radius: 5px;\n  box-shadow: -6px -6px 14px rgba(252, 253, 253, 0.8),\n    -6px -6px 10px rgba(253, 253, 253, 0.2), 6px 6px 8px rgba(69, 68, 68, 0.075),\n    6px 6px 10px rgba(0, 0, 0, 0.15);\n`;\n\nexport const FormTitle = styled.h1`\n  margin-bottom: 10px;\n  text-align: center;\n  font-family: 'Poppins', sans-serif;\n  font-size: 40px;\n  color: #fdfdfd;\n  text-shadow: 8px 8px 12px rgba(0, 0, 0, 0.5),\n    -8px -8px 12px rgba(0, 0, 0, 0.05);\n  outline: none;\n`;\n\nexport const ContactListTitle = styled.h2`\n  margin-bottom: 10px;\n  text-align: center;\n  font-family: 'Poppins', sans-serif;\n  font-size: 35px;\n  color: #fdfdfd;\n  text-shadow: 8px 8px 12px rgba(0, 0, 0, 0.5),\n    -8px -8px 12px rgba(0, 0, 0, 0.05);\n  outline: none;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.value;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  padding-left: 30px;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  color: #7b7979;\n  font-weight: 700;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  text-shadow: 8px 8px 12px rgba(174, 172, 172, 0.3),\n    -8px -8px 12px rgba(164, 162, 162, 0.06);\n`;\n\nexport const Field = styled(FormikField)`\n  height: 30px;\n  padding: 3px;\n  margin-bottom: 15px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 8px 8px 12px rgba(143, 142, 142, 0.2),\n    -8px -8px 12px rgba(27, 26, 26, 0.04);\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: #9a0374;\n  font-weight: 500;\n  font-size: 10px;\n`;\n\nexport const AddContactBtn = styled.button`\n  margin: 0;\n  width: 150px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  margin-top: 15px;\n  background: white;\n  border-radius: 0.5rem;\n  outline: none;\n  color: #2f2f2f;\n  font-weight: 700;\n  text-align: center;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  text-shadow: 8px 8px 12px rgba(254, 253, 253, 0.3),\n    -8px -8px 12px rgba(12, 11, 11, 0.04);\n  transition: 0.2s ease-in-out;\n  box-shadow: -6px -6px 14px rgba(251, 249, 249, 0.8),\n    -6px -6px 10px rgba(14, 13, 13, 0.2), 6px 6px 8px rgba(69, 68, 68, 0.075),\n    6px 6px 10px rgba(5, 5, 5, 0.15);\n  :hover {\n    box-shadow: -2px -2px 6px rgba(255, 255, 255, 0.7),\n      -2px -2px 4px rgba(255, 255, 255, 0.4),\n      2px 2px 2px rgba(188, 186, 186, 0.05), 2px 2px 4px rgba(0, 0, 0, 0.1);\n  }\n`;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport {\n  Form,\n  FormField,\n  Field,\n  ErrorMessage,\n  AddContactBtn, } from './ContactForm.styled';\n// import { addContact } from 'redux/contactsSlice/contactsSlice';\n// import { addContact } from 'redux/operations';\n// import { selectContacts } from 'redux/selectors';\n\n\n\n\n\nconst ContactFormSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required'),\n  number: Yup.string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = newContact => {\n    const normalizedContactName = newContact.name.toLowerCase();\n    const existedContact = contacts.find(\n      contact =>\n        contact.name && contact.name.toLowerCase() === normalizedContactName\n    );\n\n    existedContact\n      ? alert('This contact is already in contacts.')\n      : dispatch(addContact(newContact));\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={ContactFormSchema}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <FormField>\n          Name\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"p\" />\n        </FormField>\n\n        <FormField>\n          Number\n          <Field type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"p\" />\n        </FormField>\n\n        <AddContactBtn type=\"submit\">Add contact</AddContactBtn>\n      </Form>\n    </Formik>\n  );\n};","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  color: #242323;\n  font-weight: 700;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  text-shadow: 8px 8px 12px rgba(96, 95, 95, 0.3),\n    -8px -8px 12px rgba(12, 11, 11, 0.04);\n`;\n\nexport const ItemSpan = styled.div`\n  margin-right: 20px;\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  align-items: baseline;\n`;\n\nexport const ItemButton = styled.button`\n  margin: 0;\n  margin-left: auto;\n  width: 150px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  background: white;\n  border-radius: 0.5rem;\n  outline: none;\n  color: #2f2f2f;\n  font-weight: 700;\n  text-align: center;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  text-shadow: 8px 8px 12px rgba(254, 253, 253, 0.3),\n    -8px -8px 12px rgba(12, 11, 11, 0.04);\n  transition: 0.2s ease-in-out;\n  box-shadow: -6px -6px 14px rgba(251, 249, 249, 0.8),\n    -6px -6px 10px rgba(14, 13, 13, 0.2), 6px 6px 8px rgba(69, 68, 68, 0.075),\n    6px 6px 10px rgba(5, 5, 5, 0.15);\n  :hover {\n    box-shadow: -2px -2px 6px rgba(255, 255, 255, 0.7),\n      -2px -2px 4px rgba(255, 255, 255, 0.4),\n      2px 2px 2px rgba(188, 186, 186, 0.05), 2px 2px 4px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nexport const BtnDiv = styled.div`\ndisplay: flex;\ngap: 15px;\n   margin-left: auto;\n`","export const modalStyles = {\n  wrapper: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    boxRadius: 5,\n    bgcolor: '#c2d3e4',\n    boxShadow: 24,\n    p: 4,\n  },\n};\n","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  /* padding-left: 30px; */\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  color: #7b7979;\n  font-weight: 700;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  text-shadow: 8px 8px 12px rgba(174, 172, 172, 0.3),\n    -8px -8px 12px rgba(164, 162, 162, 0.06);\n`;\n\nexport const Field = styled(FormikField)`\n  height: 30px;\n  padding: 3px;\n  margin-bottom: 15px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 8px 8px 12px rgba(143, 142, 142, 0.2),\n    -8px -8px 12px rgba(27, 26, 26, 0.04);\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: #9a0374;\n  font-weight: 500;\n  font-size: 10px;\n`;\n\nexport const UpdateContactBtn = styled.button`\nmargin: 0;\n  margin-left: auto;\n  margin-right: auto;\n  width: 150px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  background: white;\n  border-radius: 0.5rem;\n  outline: none;\n  color: #2f2f2f;\n  font-weight: 700;\n  text-align: center;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  text-shadow: 8px 8px 12px rgba(254, 253, 253, 0.3),\n    -8px -8px 12px rgba(12, 11, 11, 0.04);\n  transition: 0.2s ease-in-out;\n  box-shadow: -6px -6px 14px rgba(251, 249, 249, 0.8),\n    -6px -6px 10px rgba(14, 13, 13, 0.2), 6px 6px 8px rgba(69, 68, 68, 0.075),\n    6px 6px 10px rgba(5, 5, 5, 0.15);\n  :hover {\n    box-shadow: -2px -2px 6px rgba(255, 255, 255, 0.7),\n      -2px -2px 4px rgba(255, 255, 255, 0.4),\n      2px 2px 2px rgba(188, 186, 186, 0.05), 2px 2px 4px rgba(0, 0, 0, 0.1);\n  }\n`;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/contactsOperations';\n\nimport {\n  Form,\n  FormField,\n  Field,\n  ErrorMessage,\n  UpdateContactBtn,\n} from './UpdateForm.styled';\n\n\n\nconst UpdateContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required'),\n  number: Yup.string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Required'),\n});\n\nexport const UpdateForm = ({\n  contactId,\n  contactName,\n  contactNumber,\n  onClose,\n}) => {\n  console.log(contactId, contactName, contactNumber);\n\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: contactName,\n        number: contactNumber,\n        id: contactId,\n      }}\n      validationSchema={UpdateContactSchema}\n      onSubmit={(values, id) => {\n        dispatch(\n          updateContact({\n            id: contactId,\n            name: values.name,\n            number: values.number,\n          })\n        );\n        onClose();\n      }}\n    >\n      <Form>\n        <FormField>\n          Name\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"p\" />\n        </FormField>\n\n        <FormField>\n          Number\n          <Field type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"p\" />\n        </FormField>\n\n        <UpdateContactBtn type=\"submit\">Update contact</UpdateContactBtn>\n      </Form>\n    </Formik>\n  );\n};\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\n\nimport Modal from '@mui/material/Modal';\nimport { modalStyles } from './styles';\nimport { UpdateForm } from 'components/UpdateForm/UpdateForm';\n\nconst UpdateModal = ({ open, onClose, contactId, contactName, contactNumber }) => {\n\n  return (\n    <Modal open={open} onClose={onClose}>\n      <Box sx={modalStyles.wrapper}>\n        <UpdateForm onClose={onClose} contactId={contactId} contactName={contactName} contactNumber={contactNumber } />\n      </Box>\n    </Modal>\n  );\n};\n\nexport default UpdateModal;\n","import PropTypes from 'prop-types';\n// import { ListItem, Item, ItemButton, ItemSpan } from './ContactItem.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { ListItem, Item, ItemButton, ItemSpan, BtnDiv } from './ContactItem.styled';\n\nimport UpdateModal from 'components/UpdateModal/UpdateModal';\nimport { useState } from 'react';\n\n\n\nexport const ContactItem = ({ info: { name, number, id } }) => {\n  const [open, setOpen] = useState(false)\n  \n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n  const openModal = () => {\n    setOpen(true)\n    console.log('click')\n  }\n\n \n\n  return (\n    <>\n       <Item>\n      <ListItem>\n        <ItemSpan>{name} :</ItemSpan> {number}\n      </ListItem>\n\n        <BtnDiv>\n         <ItemButton type=\"button\" onClick={openModal} >\n        Update contact\n      </ItemButton>\n\n      <ItemButton type=\"button\" onClick={handleDelete}>\n        Delete contact\n          </ItemButton>\n        </BtnDiv>   \n\n      </Item>  \n   \n      \n      <UpdateModal open={open} onClose={() => setOpen(false)} contactId={id} contactName={name} contactNumber={number } />\n    </>\n   \n  );\n};\n\nContactItem.propTypes = {\n  info: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};","import styled from 'styled-components';\n\nexport const ContactContainer = styled.div`\n  display: flex;\n  padding-left: 30px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width:600px;\n`;\n\nexport const ListItem = styled.li`\n  color: #242323;\n  font-weight: 700;\n  font-family: 'Poppins', sans-serif;\n  font-size: 20px;\n  text-shadow: 8px 8px 12px rgba(96, 95, 95, 0.3),\n    -8px -8px 12px rgba(12, 11, 11, 0.04);\n`;\n","\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/contactsSelectors';\nimport { ContactContainer, List } from './ContactList.styled';\n// import { ContactContainer, List } from './ContactList.styled';\n\n\n\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ContactContainer>\n      <List>\n        {filteredContacts?.map(contact => (\n          <ContactItem key={contact.id} info={contact}></ContactItem>\n        ))}\n      </List>\n    </ContactContainer>\n  );\n};\n\n\n\n","import { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport {\n  ContactListTitle,\n  ContactsLayout,\n  FormTitle,\n} from './ContactsPage.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectError,\n  selectContacts,\n} from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nexport const ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsLayout>\n      <FormTitle>Phonebook</FormTitle>\n      <ContactForm />\n      <ContactListTitle>Contacts</ContactListTitle>\n      <ContactFilter />\n\n      {isLoading && !error && <b>Loading...</b>}\n      {contacts.length > 0 && <ContactList />}\n    </ContactsLayout>\n  );\n};\n","import { ContactsPage } from \"components/ContactsPage/ContactsPage\";\n\n\n\n\n// const styles = {\n//   container: {\n//     minHeight: 'calc(100vh - 50px)',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n//   title: {\n//     fontWeight: 500,\n//     fontSize: 48,\n//     textAlign: 'center',\n//   },\n// };\n\n\nexport default function Contacts() {\n  return (\n    <div >\n      <ContactsPage />\n    \n    </div>\n  );\n}\n"],"names":["FilterLabel","styled","FilterContainer","FilterField","ContactFilter","dispatch","useDispatch","filter","useSelector","state","value","type","onChange","event","getFilteredContacts","currentTarget","ContactsLayout","FormTitle","ContactListTitle","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","Form","FormikForm","FormField","Field","FormikField","ErrorMessage","FormikError","AddContactBtn","ContactFormSchema","Yup","shape","matches","required","number","ContactForm","initialValues","validationSchema","onSubmit","values","actions","newContact","normalizedContactName","find","alert","addContact","handleSubmit","resetForm","component","ListItem","ItemSpan","Item","ItemButton","BtnDiv","modalStyles","wrapper","position","top","left","transform","width","boxRadius","bgcolor","boxShadow","p","UpdateContactBtn","UpdateContactSchema","UpdateForm","contactId","contactName","contactNumber","onClose","console","log","id","updateContact","open","Modal","Box","sx","ContactItem","info","useState","setOpen","onClick","deleteContact","ContactContainer","List","ContactList","filteredContacts","map","ContactsPage","useEffect","fetchContacts","length","Contacts"],"sourceRoot":""}