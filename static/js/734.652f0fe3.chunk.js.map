{"version":3,"file":"static/js/734.652f0fe3.chunk.js","mappings":"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","sources":["components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","components/ContactsPage/ContactsPage.styled.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/GlobalStyle.js","components/ContactsPage/ContactsPage.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  color: #7b7979;\n  font-weight: 700;\n  font-family: 'Poppins', sans-serif;\n  font-size: 20px;\n  text-shadow: 8px 8px 12px rgba(174, 172, 172, 0.3),\n    -8px -8px 12px rgba(164, 162, 162, 0.06);\n`;\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  margin-top: 15px;\n  padding-left: 30px;\n`;\n\nexport const FilterField = styled.input`\n  height: 30px;\n  padding: 3px;\n  margin-bottom: 15px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 8px 8px 12px rgba(143, 142, 142, 0.2),\n    -8px -8px 12px rgba(27, 26, 26, 0.04);\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/contactsFilterSlice';\nimport { FilterLabel,  FilterContainer, FilterField, } from './ContactFilter.styled';\n\n\n// import {\n//   FilterLabel,\n//   FilterContainer,\n//   FilterField,\n// } from './ContactFilter.styled';\n\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.value);\n\n  const changeFilter = event => {\n    dispatch(getFilteredContacts(event.currentTarget.value));\n  };\n\n  return (\n    <FilterContainer>\n      <FilterLabel>\n        Find Contacts by name\n        <FilterField type=\"text\" value={filter} onChange={changeFilter} />\n      </FilterLabel>\n    </FilterContainer>\n  );\n};","import styled from 'styled-components';\n\nexport const ContactsLayout = styled.div`   \n  width: 600px;\n  padding: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  align-items: center;\n  background: #c1d3e0;\n  border-radius: 5px;\n  box-shadow: -6px -6px 14px rgba(252, 253, 253, 0.8),\n    -6px -6px 10px rgba(253, 253, 253, 0.2), 6px 6px 8px rgba(69, 68, 68, 0.075),\n    6px 6px 10px rgba(0, 0, 0, 0.15);\n`;\n\nexport const FormTitle = styled.h1`\n  margin-bottom: 10px;\n  text-align: center;\n  font-family: 'Poppins', sans-serif;\n  font-size: 40px;\n  color: #fdfdfd;\n  text-shadow: 8px 8px 12px rgba(0, 0, 0, 0.5),\n    -8px -8px 12px rgba(0, 0, 0, 0.05);\n  outline: none;\n`;\n\nexport const ContactListTitle = styled.h2`\n  margin-bottom: 10px;\n  text-align: center;\n  font-family: 'Poppins', sans-serif;\n  font-size: 35px;\n  color: #fdfdfd;\n  text-shadow: 8px 8px 12px rgba(0, 0, 0, 0.5),\n    -8px -8px 12px rgba(0, 0, 0, 0.05);\n  outline: none;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.value;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    console.log(contacts);\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  padding-left: 30px;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  color: #7b7979;\n  font-weight: 700;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  text-shadow: 8px 8px 12px rgba(174, 172, 172, 0.3),\n    -8px -8px 12px rgba(164, 162, 162, 0.06);\n`;\n\nexport const Field = styled(FormikField)`\n  height: 30px;\n  padding: 3px;\n  margin-bottom: 15px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 8px 8px 12px rgba(143, 142, 142, 0.2),\n    -8px -8px 12px rgba(27, 26, 26, 0.04);\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: #9a0374;\n  font-weight: 500;\n  font-size: 10px;\n`;\n\nexport const AddContactBtn = styled.button`\n  margin: 0;\n  width: 150px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  margin-top: 15px;\n  background: white;\n  border-radius: 0.5rem;\n  outline: none;\n  color: #2f2f2f;\n  font-weight: 700;\n  text-align: center;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  text-shadow: 8px 8px 12px rgba(254, 253, 253, 0.3),\n    -8px -8px 12px rgba(12, 11, 11, 0.04);\n  transition: 0.2s ease-in-out;\n  box-shadow: -6px -6px 14px rgba(251, 249, 249, 0.8),\n    -6px -6px 10px rgba(14, 13, 13, 0.2), 6px 6px 8px rgba(69, 68, 68, 0.075),\n    6px 6px 10px rgba(5, 5, 5, 0.15);\n  :hover {\n    box-shadow: -2px -2px 6px rgba(255, 255, 255, 0.7),\n      -2px -2px 4px rgba(255, 255, 255, 0.4),\n      2px 2px 2px rgba(188, 186, 186, 0.05), 2px 2px 4px rgba(0, 0, 0, 0.1);\n  }\n`;","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport {\n  Form,\n  FormField,\n  Field,\n  ErrorMessage,\n  AddContactBtn, } from './ContactForm.styled';\n// import { addContact } from 'redux/contactsSlice/contactsSlice';\n// import { addContact } from 'redux/operations';\n// import { selectContacts } from 'redux/selectors';\n\n\n\n\n\nconst ContactFormSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required'),\n  number: Yup.string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = newContact => {\n    const normalizedContactName = newContact.name.toLowerCase();\n    const existedContact = contacts.find(\n      contact =>\n        contact.name && contact.name.toLowerCase() === normalizedContactName\n    );\n\n    existedContact\n      ? alert('This contact is already in contacts.')\n      : dispatch(addContact(newContact));\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={ContactFormSchema}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <FormField>\n          Name\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"p\" />\n        </FormField>\n\n        <FormField>\n          Number\n          <Field type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"p\" />\n        </FormField>\n\n        <AddContactBtn type=\"submit\">Add contact</AddContactBtn>\n      </Form>\n    </Formik>\n  );\n};","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  color: #242323;\n  font-weight: 700;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  text-shadow: 8px 8px 12px rgba(96, 95, 95, 0.3),\n    -8px -8px 12px rgba(12, 11, 11, 0.04);\n`;\n\nexport const ItemSpan = styled.div`\n  margin-right: 20px;\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  align-items: baseline;\n`;\n\nexport const ItemButton = styled.button`\n  margin: 0;\n  margin-left: auto;\n  width: 150px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  background: white;\n  border-radius: 0.5rem;\n  outline: none;\n  color: #2f2f2f;\n  font-weight: 700;\n  text-align: center;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  text-shadow: 8px 8px 12px rgba(254, 253, 253, 0.3),\n    -8px -8px 12px rgba(12, 11, 11, 0.04);\n  transition: 0.2s ease-in-out;\n  box-shadow: -6px -6px 14px rgba(251, 249, 249, 0.8),\n    -6px -6px 10px rgba(14, 13, 13, 0.2), 6px 6px 8px rgba(69, 68, 68, 0.075),\n    6px 6px 10px rgba(5, 5, 5, 0.15);\n  :hover {\n    box-shadow: -2px -2px 6px rgba(255, 255, 255, 0.7),\n      -2px -2px 4px rgba(255, 255, 255, 0.4),\n      2px 2px 2px rgba(188, 186, 186, 0.05), 2px 2px 4px rgba(0, 0, 0, 0.1);\n  }\n`;","import PropTypes from 'prop-types';\n// import { ListItem, Item, ItemButton, ItemSpan } from './ContactItem.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { ListItem, Item, ItemButton, ItemSpan } from './ContactItem.styled';\n\n\nexport const ContactItem = ({ info: { name, phone, id } }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Item>\n      <ListItem>\n        <ItemSpan>{name} :</ItemSpan> {phone}\n      </ListItem>\n      <ItemButton type=\"button\" onClick={handleDelete}>\n        Delete contact\n      </ItemButton>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  info: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};","import styled from 'styled-components';\n\nexport const ContactContainer = styled.div`\n  display: flex;\n  padding-left: 30px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 480px;\n`;\n\nexport const ListItem = styled.li`\n  color: #242323;\n  font-weight: 700;\n  font-family: 'Poppins', sans-serif;\n  font-size: 20px;\n  text-shadow: 8px 8px 12px rgba(96, 95, 95, 0.3),\n    -8px -8px 12px rgba(12, 11, 11, 0.04);\n`;\n","\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/contactsSelectors';\nimport { ContactContainer, List } from './ContactList.styled';\n// import { ContactContainer, List } from './ContactList.styled';\n\n\n\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ContactContainer>\n      <List>\n        {filteredContacts?.map(contact => (\n          <ContactItem key={contact.id} info={contact}></ContactItem>\n        ))}\n      </List>\n    </ContactContainer>\n  );\n};\n\n\n\n","import { createGlobalStyle } from 'styled-components';\nimport 'modern-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\n          body {\n            background-color:  rgb(234, 237, 237);\n            padding-top: 15px;\n            padding-bottom: 15px;\n          }\n          h1,\n          h2,\n          h3,\n          h4,\n          h5,\n          h6,\n          p {\n            margin: 0;\n          }\n           button {\n            margin: 0 auto;\n            cursor: pointer;\n            border: none;\n          }\n          ul {\n            list-style: none;\n            padding: 0;\n            margin: 0;\n          }\n          \n          `;","// import { ContactFilter } from 'components/ContactFilter/ContactFilter';\n// import { ContactForm } from '../ContactForm/ContactForm';\n// import { ContactList } from '../ContactList/ContactList';\n// import { GlobalStyle } from '../GlobalStyle';\n// import { ContactListTitle, FormTitle, ContactsLayout } from './App.styled';\n\nimport { ContactFilter } from \"components/ContactFilter/ContactFilter\";\nimport { ContactListTitle, ContactsLayout, FormTitle } from \"./ContactsPage.styled\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { GlobalStyle } from \"components/GlobalStyle\";\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading, selectError, selectContacts } from \"redux/contacts/contactsSelectors\";\nimport { fetchContacts } from \"redux/contacts/contactsOperations\";\n\n\nexport const ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsLayout>\n      <FormTitle>Phonebook</FormTitle>\n      <ContactForm/>\n      <ContactListTitle>Contacts</ContactListTitle>\n      <ContactFilter/>\n\n      {isLoading && !error && <b>Loading...</b>}\n      {contacts.length > 0 && <ContactList />}\n\n      <GlobalStyle /> \n    </ContactsLayout>\n  );\n};","import { ContactsPage } from \"components/ContactsPage/ContactsPage\";\n\n\n\n// const styles = {\n//   container: {\n//     minHeight: 'calc(100vh - 50px)',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//   },\n//   title: {\n//     fontWeight: 500,\n//     fontSize: 48,\n//     textAlign: 'center',\n//   },\n// };\n\n\nexport default function Contacts() {\n  return (\n    <div >\n      <ContactsPage/>\n    </div>\n  );\n}\n"],"names":["FilterLabel","styled","FilterContainer","FilterField","ContactFilter","dispatch","useDispatch","filter","useSelector","state","value","type","onChange","event","getFilteredContacts","currentTarget","ContactsLayout","FormTitle","ContactListTitle","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","console","log","normalizedFilter","toLowerCase","contact","name","includes","Form","FormikForm","FormField","Field","FormikField","ErrorMessage","FormikError","AddContactBtn","ContactFormSchema","Yup","shape","matches","required","number","ContactForm","initialValues","validationSchema","onSubmit","values","actions","newContact","normalizedContactName","find","alert","addContact","handleSubmit","resetForm","component","ListItem","ItemSpan","Item","ItemButton","ContactItem","info","phone","id","onClick","deleteContact","ContactContainer","List","ContactList","filteredContacts","map","GlobalStyle","createGlobalStyle","ContactsPage","useEffect","fetchContacts","length","Contacts"],"sourceRoot":""}