{"version":3,"file":"static/js/284.8d3c9001.chunk.js","mappings":"8PAOaA,EAAaC,EAAAA,GAAAA,IAAH,ubAkBVC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,wJASJG,EAAYH,EAAAA,GAAAA,MAAH,+RAYTI,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,8OAWLM,GAAeN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,oFAMZQ,EAAWR,EAAAA,GAAAA,OAAH,02B,SCjDfS,EAAkBC,EAAAA,KAAaC,MAAM,CAGzCC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YAEpDC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,0CACPC,QAAQ,WAAY,6CACpBA,QAAQ,QAAS,6CACjBH,SAAS,wBACTA,SAAS,cAGDI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACpB,EAAD,WACE,SAAC,KAAD,CACEqB,cAAe,CACbR,MAAO,GACPE,SAAU,IAEZO,iBAAkBZ,EAClBa,SAAU,SAAAC,GACRL,GACEM,EAAAA,EAAAA,IAAM,CACJZ,MAAOW,EAAOX,MACdE,SAAUS,EAAOT,WAGtB,EAbH,UAeE,UAACb,EAAD,YACE,UAACE,EAAD,oBAEE,SAACC,EAAD,CAAOqB,KAAK,QAAQC,KAAK,QAAYC,aAAa,SAClD,SAACrB,EAAD,CAAcoB,KAAK,QAAQE,UAAU,UAGvC,UAACzB,EAAD,uBAEE,SAACC,EAAD,CAAOqB,KAAK,WAAWC,KAAK,WAAWC,aAAa,SACpD,SAACrB,EAAD,CAAcoB,KAAK,WAAWE,UAAU,UAG1C,SAACpB,EAAD,CAAUiB,KAAK,SAAf,0BAKT,EC9Dc,SAASI,IACtB,OACE,4BACE,sCACA,SAACZ,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const LoginField = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n   margin-left: auto;\n  margin-right: auto;\n\n  width: 900px;\n min-height: calc(100vh - 150px);\n\n  padding: 20px;\n  background: #c1d3e0;\n  border-radius: 5px;\n  box-shadow: -6px -6px 14px rgba(252, 253, 253, 0.8),\n    -6px -6px 10px rgba(253, 253, 253, 0.2), 6px 6px 8px rgba(69, 68, 68, 0.075),\n    6px 6px 10px rgba(0, 0, 0, 0.15);\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n`;\n\nexport const FormField = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  color: #7b7979;\n  font-weight: 700;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  text-shadow: 8px 8px 12px rgba(174, 172, 172, 0.3),\n    -8px -8px 12px rgba(164, 162, 162, 0.06);\n`;\n\nexport const Field = styled(FormikField)`\n  height: 35px;\n  padding: 3px;\n  margin-bottom: 15px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 8px 8px 12px rgba(143, 142, 142, 0.2),\n    -8px -8px 12px rgba(27, 26, 26, 0.04);\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: #a36303;\n  font-weight: 500;\n  font-size: 10px;\n`;\n\nexport const LoginBtn = styled.button`\n  margin: 0;\n  margin-left: auto;\n  margin-right: auto;\n  width: 150px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  background: white;\n  border-radius: 0.5rem;\n  outline: none;\n  color: #2f2f2f;\n  font-weight: 700;\n  text-align: center;\n  font-family: 'Poppins', sans-serif;\n  font-size: 15px;\n  text-shadow: 8px 8px 12px rgba(254, 253, 253, 0.3),\n    -8px -8px 12px rgba(12, 11, 11, 0.04);\n  transition: 0.2s ease-in-out;\n  box-shadow: -6px -6px 14px rgba(251, 249, 249, 0.8),\n    -6px -6px 10px rgba(14, 13, 13, 0.2), 6px 6px 8px rgba(69, 68, 68, 0.075),\n    6px 6px 10px rgba(5, 5, 5, 0.15);\n  :hover {\n     background-color: #f8d256;\n    box-shadow: -2px -2px 6px rgba(255, 255, 255, 0.7),\n      -2px -2px 4px rgba(255, 255, 255, 0.4),\n      2px 2px 2px rgba(188, 186, 186, 0.05), 2px 2px 4px rgba(0, 0, 0, 0.1);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperarions';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  Form,\n  FormField,\n  Field,\n  ErrorMessage,\n  LoginBtn,\n  LoginField,\n} from './LoginForm.styled';\n\nconst LoginFormSchema = Yup.object().shape({\n \n  \n  email: Yup.string().email('Invalid email').required('Required'),\n   \n  password: Yup.string()\n    .min(7, 'Password must be at least 7 characters')\n    .matches(/[a-zA-Z]/, 'Password must contain at least one letter')\n    .matches(/[0-9]/, 'Password must contain at least one number')\n    .required('Password is required')\n    .required('Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <LoginField>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={LoginFormSchema}\n        onSubmit={values => {\n          dispatch(\n            logIn({\n              email: values.email,\n              password: values.password,\n            })\n          );\n        }}\n      >\n        <Form>\n          <FormField>\n            Email\n            <Field type=\"email\" name=\"email\"     autoComplete=\"off\"/>\n            <ErrorMessage name=\"email\" component=\"p\" />\n          </FormField>\n\n          <FormField>\n            Password\n            <Field type=\"password\" name=\"password\" autoComplete=\"off\"/>\n            <ErrorMessage name=\"password\" component=\"p\" />\n          </FormField>\n\n          <LoginBtn type=\"submit\">Log In</LoginBtn>\n        </Form>\n      </Formik>\n    </LoginField>\n  );\n};\n","\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <title>Login</title>\n      <LoginForm />\n    </div>\n  );\n}"],"names":["LoginField","styled","Form","FormikForm","FormField","Field","FormikField","ErrorMessage","FormikError","LoginBtn","LoginFormSchema","Yup","shape","email","required","password","min","matches","LoginForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","logIn","type","name","autoComplete","component","Login"],"sourceRoot":""}